name: build-test-zap

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: myapp
  DOCKERFILE_PATH: ./Dockerfile
  APP_PORT: 3000
  HEALTH_PATH: /health
  HEALTH_TIMEOUT: 120

jobs:
  zap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure no previous container is running
        run: docker rm -f ${{ env.IMAGE_NAME }} || true

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} -f "${{ env.DOCKERFILE_PATH }}" .

      - name: Run container
        run: |
          docker run -d \
            -p ${{ env.APP_PORT }}:${{ env.APP_PORT }} \
            --name ${{ env.IMAGE_NAME }} \
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker logs -f ${{ env.IMAGE_NAME }} &

      - name: Sanity-check container state
        run: |
          docker ps -a --filter name=${{ env.IMAGE_NAME }}
          docker port ${{ env.IMAGE_NAME }}

      - name: Wait for app health endpoint
        run: |
          timeout ${{ env.HEALTH_TIMEOUT }} bash -c \
            'until curl -fsS http://localhost:${{ env.APP_PORT }}${{ env.HEALTH_PATH }} >/dev/null 2>&1; do sleep 2; done'

      # âœ… FIXED: Let ZAP action handle reports
      - name: OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: "http://localhost:${{ env.APP_PORT }}"
          cmd_options: '-a'
          artifact_name: "zap-reports-${{ github.run_id }}"

      - name: Shut down app
        if: always()
        run: docker rm -f ${{ env.IMAGE_NAME }}
